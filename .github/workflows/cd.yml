name: CD

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.2.3)'
        required: true
        type: string
      description:
        description: 'Release description'
        required: true
        type: string

jobs:
  prepare-release:
    name: Prepare Release
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'stage' }}

    steps:
      - name: Check branch and set environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Deploying to production environment"
          elif [[ "${{ github.ref }}" == "refs/heads/stage" ]]; then
            echo "Deploying to staging environment"
          else
            echo "Deployments must be triggered from main or stage branch"
            exit 1
          fi

  deploy:
    needs: prepare-release
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'prod' || 'stage' }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Deploy to Vercel
        id: vercel-deploy
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npm i -g vercel

          vercel pull --yes --environment=${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }} --token=$VERCEL_TOKEN

          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Deploying to production..."
            DEPLOY_URL=$(vercel deploy --prod --token=$VERCEL_TOKEN)
          else
            echo "Deploying to staging..."
            DEPLOY_URL=$(vercel deploy --token=$VERCEL_TOKEN)
          fi

          echo "url=$DEPLOY_URL" >> $GITHUB_OUTPUT

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './dist'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "${{ github.ref == 'refs/heads/main' && 'Production' || 'Staging' }} Deploy v${{ github.event.inputs.version }}"
          enable-pull-request-comment: false
          enable-commit-comment: true
          production-deploy: ${{ github.ref == 'refs/heads/main' }}
          alias: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Create Release
        if: github.ref == 'refs/heads/main'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.description }}
          draft: false
          prerelease: false