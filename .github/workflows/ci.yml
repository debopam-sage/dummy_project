name: CI Pipeline for RecruitSage

on:
  workflow_dispatch:
  push:
    branches: [ stage ]
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - stage
      - main

# ‚Äúdummy-project‚Äù is your Netlify site slug prefix; adjust if yours differs
env:
  SITE_PREFIX: dummy-project

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: npm
      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-20-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-20-
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint Codebase
        run: |
          echo "üîç Running ESLint..."
          npm run lint
      - name: Build Project
        run: |
          echo "üèó Building the project..."
          npm run build
      - name: Run Code Coverage
        run: |
          echo "üß™ Running code coverage..."
          npm run coverage || echo "‚ö†Ô∏è Coverage run failed"
      - name: Enforce PR Source Branch (to main)
        if: github.base_ref == 'main'
        run: |
          echo "üîê Checking if PR to main is from stage branch..."
          if [[ "${{ github.head_ref }}" != "stage" ]]; then
            echo "‚ùå Pull requests to main branch must come from stage branch"
            exit 1
          fi

  preview-deploy:
    name: Deploy Preview (Netlify)
    needs: validate
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && (github.base_ref == 'stage' || github.base_ref == 'main')
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: npm
      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-20-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-20-
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build Project
        run: |
          echo "üîß Rebuilding for deployment..."
          npm run build
      - name: Deploy to Netlify
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './dist'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          alias: ${{ github.base_ref }}-preview-${{ github.event.number }}
          production-deploy: false
          enable-pull-request-comment: false   # ‚Üê disable PR comments
          enable-commit-comment: false         # ‚Üê disable commit comments
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      - name: Output Preview URL
        run: |
          echo "### ‚úÖ Preview URLs" >> $GITHUB_STEP_SUMMARY
          echo "- Netlify: https://${{ github.base_ref }}-preview-${{ github.event.number }}--${{ env.SITE_PREFIX }}-stage.netlify.app" >> $GITHUB_STEP_SUMMARY

  status-check:
    name: Final Status Check
    needs: [ validate, preview-deploy ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Block on Failure
        if: >
          contains(needs.validate.result, 'failure') ||
          contains(needs.preview-deploy.result, 'failure') ||
          contains(needs.*.result, 'cancelled')
        run: |
          echo "‚ùå One or more jobs failed. Merging is blocked."
          exit 1
      - name: Confirm Success
        if: success()
        run: |
          echo "‚úÖ All jobs passed. Good to go!"
