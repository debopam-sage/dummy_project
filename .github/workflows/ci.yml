name: CI Pipeline for RecruitSage

# Trigger on manual dispatch, pushes to 'stage', and PRs targeting 'stage' or 'main'
on:
  workflow_dispatch:
  push:
    branches: [ stage ]
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - stage
      - main

# Global env: pull the Netlify site name from a GitHub Secret
env:
  NETLIFY_SITE_NAME: ${{ secrets.NETLIFY_SITE_NAME }}

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: npm

      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-20-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-20-

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Lint Codebase
        run: |
          echo "🔍 Starting ESLint to check code quality..." >> $GITHUB_STEP_SUMMARY
          npm run lint | tee eslint-output.log
          echo "### 🔍 ESLint Results" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat eslint-output.log >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Build Project
        run: |
          echo "🏗 Starting production build..." >> $GITHUB_STEP_SUMMARY
          npm run build | tee build-output.log
          echo "### 🏗 Build Output" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat build-output.log >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Run and Capture Code Coverage
        run: |
          echo "🧪 Running code coverage and writing summary..." >> $GITHUB_STEP_SUMMARY
          npm run coverage | tee coverage-output.log
          echo "### 🧪 Code Coverage Output (Raw)" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat coverage-output.log >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Enforce PR Source Branch (to main)
        if: github.base_ref == 'main'
        run: |
          echo "🔐 Checking if PR to main is from stage branch..." >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.head_ref }}" != "stage" ]]; then
            echo "❌ Pull requests to main branch must come from stage branch" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

  preview-deploy:
    name: Deploy Preview (Netlify)
    needs: validate
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request' &&
      (github.base_ref == 'stage' || github.base_ref == 'main')

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: npm

      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-20-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-20-

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Check for Deployment Keywords
        run: |
          TITLE="${{ github.event.pull_request.title }}"
          BODY="${{ github.event.pull_request.body }}"
          TEXT="$(echo "$TITLE $BODY" | tr '[:upper:]' '[:lower:]')"

          if echo "$TEXT" | grep -qE "ready for preview|deploying|show preview|ready to ship"; then
            echo "🟢 Deployment keywords found, proceeding with Netlify deploy." >> $GITHUB_STEP_SUMMARY
          else
            echo "🛑 No deploy keywords found. Skipping preview deploy." >> $GITHUB_STEP_SUMMARY
            exit 0
          fi

      - name: Rebuild Project for Preview
        run: |
          echo "🔧 Rebuilding project for preview deploy..." >> $GITHUB_STEP_SUMMARY
          npm run build

      - name: Deploy to Netlify
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './dist'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Preview Deploy from PR #${{ github.event.number }}"
          enable-pull-request-comment: false
          enable-commit-comment: false
          alias: pr-${{ github.event.number }}
          production-deploy: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Output Preview URL
        run: |
          echo "### ✅ Preview URL" >> $GITHUB_STEP_SUMMARY
          echo "- Netlify: https://pr-${{ github.event.number }}--${{ env.NETLIFY_SITE_NAME }}.netlify.app" >> $GITHUB_STEP_SUMMARY

  status-check:
    name: Final Status Check
    needs: [ validate, preview-deploy ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Block on Failure
        if: >
          contains(needs.validate.result, 'failure') ||
          contains(needs.preview-deploy.result, 'failure') ||
          contains(needs.*.result, 'cancelled')
        run: |
          echo "❌ One or more jobs failed. Merging is blocked." >> $GITHUB_STEP_SUMMARY
          exit 1

      - name: Confirm Success
        if: success()
        run: |
          echo "✅ All jobs passed. Good to go!" >> $GITHUB_STEP_SUMMARY
