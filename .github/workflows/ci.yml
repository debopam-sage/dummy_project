name: CI Pipeline for RecruitSage

on:
  workflow_dispatch:
  push:
    branches: [ stage ]
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - stage
      - main

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    environment: ${{ github.base_ref == 'main' && 'prod' || 'stage' }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-20-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-20-

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Lint Codebase
        run: |
          echo "üîç Running ESLint..."
          npm run lint

      - name: Build Project
        run: |
          echo "üèó Building the project..."
          npm run build

      - name: Run Code Coverage
        run: |
          echo "üß™ Running code coverage..."
          npm run coverage || echo "‚ö†Ô∏è Coverage run failed"

      - name: Output Code Coverage to Summary
        if: success()
        run: |
          echo "üìä Generating coverage summary UI..."
          if [ -f coverage/coverage-summary.json ]; then
            echo "### üß™ Code Coverage Summary" >> $GITHUB_STEP_SUMMARY
            jq -r '."total" | 
              "| Metric | % Covered | Covered / Total |",
              "|--------|------------|------------------|",
              "| Lines  | \(.lines.pct)% | \(.lines.covered)/\(.lines.total) |",
              "| Stmts  | \(.statements.pct)% | \(.statements.covered)/\(.statements.total) |",
              "| Branch | \(.branches.pct)% | \(.branches.covered)/\(.branches.total) |",
              "| Funcs  | \(.functions.pct)% | \(.functions.covered)/\(.functions.total) |"' coverage/coverage-summary.json >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ö†Ô∏è No coverage-summary.json file found. Skipping summary."
          fi

      - name: Enforce PR Source Branch (to main)
        if: github.base_ref == 'main'
        run: |
          echo "üîê Checking if PR to main is from stage branch..."
          if [[ "${{ github.head_ref }}" != "stage" ]]; then
            echo "‚ùå Pull requests to main branch must come from stage branch"
            exit 1
          fi

  preview-deploy:
    name: Deploy Preview (Netlify)
    needs: validate
    if: |
      github.event_name == 'pull_request' &&
      (github.base_ref == 'stage' || github.base_ref == 'main') &&
      (
        contains(toLower(github.event.pull_request.title), 'ready for preview') ||
        contains(toLower(github.event.pull_request.title), 'deploying') ||
        contains(toLower(github.event.pull_request.title), 'show preview') ||
        contains(toLower(github.event.pull_request.title), 'ready to ship') ||
        contains(toLower(github.event.pull_request.body), 'ready for preview') ||
        contains(toLower(github.event.pull_request.body), 'deploying') ||
        contains(toLower(github.event.pull_request.body), 'show preview') ||
        contains(toLower(github.event.pull_request.body), 'ready to ship')
      )
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.base_ref == 'main' && 'prod' || 'stage' }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-20-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-20-

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build Project
        run: |
          echo "üîß Rebuilding for deployment..."
          npm run build

      - name: Deploy to Netlify
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './dist'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy Preview from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: false
          alias: pr-${{ github.event.number }}
          production-deploy: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Output Preview URL
        run: |
          echo "### ‚úÖ Preview URL" >> $GITHUB_STEP_SUMMARY
          echo "- Netlify: https://pr-${{ github.event.number }}--dummy-project-${{ github.base_ref }}.netlify.app" >> $GITHUB_STEP_SUMMARY

  status-check:
    name: Final Status Check
    needs: [validate, preview-deploy]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Validate Job Results
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: |
          echo "‚ùå One or more jobs failed. Merging is blocked."
          exit 1

      - name: Confirm Success
        if: success()
        run: |
          echo "‚úÖ All jobs passed. Good to go!"
