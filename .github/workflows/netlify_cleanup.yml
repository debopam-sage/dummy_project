name: Monthly Netlify Cleanup

# Runs at 3 AM UTC on the 1st of every month, and also allows manual trigger
on:
  schedule:
    - cron: '0 3 1 * *'
  workflow_dispatch:

jobs:
  cleanup-netlify:
    name: Cleanup Netlify Previews
    runs-on: ubuntu-latest
    # Repoโlevel secrets for Netlify API access
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrexts.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID:   ${{ secrets.NETLIFY_SITE_ID }}

    steps:
      #โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
      # Step 1: Install jq for JSON parsing
      #โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          echo "๐ง jq installed." >> $GITHUB_STEP_SUMMARY

      #โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
      # Step 2: Fetch & delete previews older than 60 days
      #           - Collect deleted IDs into an array
      #           - Set outputs via GITHUB_OUTPUT
      #โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
      - name: Cleanup old deploy previews
        id: cleanup
        run: |
          echo "๐งน Starting cleanup of deploy-preview contexts older than 60 days..." >> $GITHUB_STEP_SUMMARY

          deleted_ids=()   # Array to track deleted preview IDs

          # Fetch all deploys and filter for preview contexts
          all_deploys=$(curl -s \
            -H "Authorization: Bearer $NETLIFY_AUTH_TOKEN" \
            https://api.netlify.com/api/v1/sites/$NETLIFY_SITE_ID/deploys)

          echo "$all_deploys" \
            | jq -c '.[] | select(.context == "deploy-preview")' \
            | while read -r deploy; do

              id=$(echo "$deploy"   | jq -r '.id')
              created=$(echo "$deploy" | jq -r '.created_at')

              created_epoch=$(date -d "$created" +%s)
              cutoff_epoch=$(date -d "60 days ago" +%s)

              if [ "$created_epoch" -lt "$cutoff_epoch" ]; then
                echo " โข Deleting preview $id created at $created" >> $GITHUB_STEP_SUMMARY

                # Delete preview deploy
                curl -s -X DELETE \
                  -H "Authorization: Bearer $NETLIFY_AUTH_TOKEN" \
                  https://api.netlify.com/api/v1/deploys/$id >/dev/null

                deleted_ids+=( "$id" )
              fi
            done

          # Count and prepare comma-separated list
          count=${#deleted_ids[@]}
          if [ "$count" -gt 0 ]; then
            deleted_ids_str=$(IFS=,; echo "${deleted_ids[*]}")
          else
            deleted_ids_str=""
          fi

          # Export step outputs for downstream consumption
          echo "deleted_count=$count" >> "$GITHUB_OUTPUT"
          echo "deleted_ids=$deleted_ids_str" >> "$GITHUB_OUTPUT"

          echo "โ Cleanup complete: $count previews deleted." >> $GITHUB_STEP_SUMMARY

      #โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
      # Step 3: Print a concise summary to console
      #โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
      - name: Show cleanup summary
        run: |
          echo "โ๏ธ Deleted ${{ steps.cleanup.outputs.deleted_count }} previews."
          if [ -n "${{ steps.cleanup.outputs.deleted_ids }}" ]; then
            echo "๐ IDs: ${{ steps.cleanup.outputs.deleted_ids }}"
          fi
