name: Production Deployment

# Manually trigger from the GitHub UI
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. v1.2.3)'
        required: true
        type: string
      description:
        description: 'Release description'
        required: true
        type: string

permissions:
  contents: write          # needed to create releases
  actions: read            # needed to list workflow runs

env:
  SITE_PREFIX: ${{ vars.SITE_NAME }}

jobs:
  prod-deploy:
    name: Deploy Main → Production
    runs-on: ubuntu-latest

    steps:
      #──────────────────────────────────────────────────────────────────
      # 1. Checkout code & install dependencies
      #──────────────────────────────────────────────────────────────────
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: "Log: Installing dependencies"
        run: |
          echo "📥 Installing Node.js dependencies..." >> $GITHUB_STEP_SUMMARY
          npm ci

      #──────────────────────────────────────────────────────────────────
      # 2. Build production artifacts
      #──────────────────────────────────────────────────────────────────
      - name: "Log: Building production"
        run: |
          echo "🏗 Building production assets..." >> $GITHUB_STEP_SUMMARY
          npm run build

      #──────────────────────────────────────────────────────────────────
      # 3. Deploy to Vercel
      #──────────────────────────────────────────────────────────────────
      - name: "Deploy: Vercel"
        id: vercel
        run: |
          echo "🚀 Deploying to Vercel (production)..." >> $GITHUB_STEP_SUMMARY
          npm install -g vercel@latest
          mkdir -p .vercel
          cat <<EOF > .vercel/project.json
          {
            "orgId": "${{ secrets.VERCEL_ORG_ID }}",
            "projectId": "${{ secrets.VERCEL_PROJECT_ID }}"
          }
          EOF
          DEPLOY_URL=$(vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "url=$DEPLOY_URL" >> $GITHUB_OUTPUT
          echo "✅ Vercel URL: $DEPLOY_URL" >> $GITHUB_STEP_SUMMARY
        env:
          VERCEL_TOKEN:    ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID:   ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      #──────────────────────────────────────────────────────────────────
      # 4. Deploy to Netlify
      #──────────────────────────────────────────────────────────────────
      - name: "Deploy: Netlify"
        id: netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './dist'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Production Deploy ${{ github.event.inputs.version }}"
          production-deploy: true
          enable-pull-request-comment: false
          enable-commit-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID:   ${{ secrets.NETLIFY_SITE_ID }}

      - name: "Log: Netlify URL"
        run: |
          echo "🚀 Netlify URL: https://${{ env.SITE_PREFIX }}.netlify.app" >> $GITHUB_STEP_SUMMARY

      #──────────────────────────────────────────────────────────────────
      # 5. Create GitHub Release
      #──────────────────────────────────────────────────────────────────
      - name: "Create GitHub Release"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.description }}
          draft: false
          prerelease: false

      - name: "Log: Release created"
        run: |
          echo "🎉 GitHub Release ${{ github.event.inputs.version }} created." >> $GITHUB_STEP_SUMMARY
